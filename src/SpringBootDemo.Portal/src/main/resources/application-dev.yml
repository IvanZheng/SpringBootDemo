server:
  port: 8082

#jdbc_url: jdbc:mysql://localhost:3306/iframework.demodb?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&serverTimezone=UTC
#jdbc_username: root
#jdbc_password: Password01!

postLogoutRedirectUri: http://localhost:8082

spring:
  jpa:
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    show-sql: true
    hibernate:
      ddl-auto: update
  datasource:
    url: jdbc:mysql://localhost:3306/iframework.jpademodb?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&serverTimezone=UTC
    username: root
    password: Password01!
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      # 下面为连接池的补充设置，应用到上面所有数据源中
      # 初始化大小，最小，最大
      initial-size: 5
      min-idle: 5
      max-active: 20
      # 配置获取连接等待超时的时间
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1 FROM DUAL
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      pool-prepared-statements: true
      #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      max-pool-prepared-statement-per-connection-size: 20
      filters: stat,wall
      use-global-data-source-stat: true
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 配置监控服务器
      stat-view-servlet:
        enabled: true
        login-username: admin
        login-password: 123456
        reset-enable: false
        url-pattern: /druid/*
        # 添加IP白名单
        #allow:
        # 添加IP黑名单，当白名单和黑名单重复时，黑名单优先级更高
        #deny:
      web-stat-filter:
        enabled: true
        # 添加过滤规则
        url-pattern: /*
        # 忽略过滤格式
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"

  security:
    oauth2:
      client:
        registration:
          zero:
           client-id: SpringBootMvc
           client-secret: secret
           scope:
             - role
             - profile
             - openid

        provider:
          zero:
            issuer-uri: https://teamcore.cn/zero.ids
#security:
#  oauth2:
#    client:
#      clientId: SpringBootMvc
#      clientSecret: secret
#      accessTokenUri: http://zero.teamcore.cn/ids/connect/token
#      userAuthorizationUri: http://zero.teamcore.cn/ids/connect/authorize
#      scope:
#        - roles
#        - profile
#        - openid
#      grant-type: authorization_code
#    resource:
#      userInfoUri: http://zero.teamcore.cn/ids/connect/userinfo

mybatis:
  configuration:
    #log-impl: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl
